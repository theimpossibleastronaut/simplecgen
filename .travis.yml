language: c
cache: ccache
matrix:
# gcc
  include:
    - os: linux
      dist: xenial
      compiler: gcc
      env: CHECK="true" COMPILER="default"
    - os: linux
      dist: bionic
      compiler: gcc
    - os: linux
      dist: bionic
      compiler: gcc
      env: MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    - os: linux
      dist: bionic
      compiler: gcc
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - os: linux
      dist: bionic
      compiler: gcc
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

# clang
    - os: linux
      dist: xenial
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-5.0
          packages:
            - clang-5.0
      env: MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
    - os: linux
      dist: xenial
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-6.0
          packages:
            - clang-6.0
      env: MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
    - os: linux
      dist: xenial
      compiler: clang
# osx
    - os: osx
      osx_image: xcode9.4
      env: XCODE="true"
    - os: osx
      osx_image: xcode10.2
      env: XCODE="true"

#  allow_failures:
#    - os: osx

before_install:
  - echo $CC
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      eval "${MATRIX_EVAL}";
      if [ -n "$MATRIX_EVAL" ] && [ "$TRAVIS_COMPILER" != "clang" ]; then
        sudo apt-get install -y $CC;
      fi;
    fi

script:
  - mkdir build && cd build
  - cmake ../src
  - make
  - cd .. && build/simplecgen
